<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" targetNamespace="http://provider.xs.integration.paradigms.sse.aui.ma/" xmlns:tns="http://provider.xs.integration.paradigms.sse.aui.ma/" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="add" type="tns:add"/>

  <xs:element name="addResponse" type="tns:addResponse"/>

  <xs:element name="computeAll" type="tns:computeAll"/>

  <xs:element name="computeAllResponse" type="tns:computeAllResponse"/>

  <xs:element name="divide" type="tns:divide"/>

  <xs:element name="divideResponse" type="tns:divideResponse"/>

  <xs:element name="multiply" type="tns:multiply"/>

  <xs:element name="multiplyResponse" type="tns:multiplyResponse"/>

  <xs:element name="subtract" type="tns:subtract"/>

  <xs:element name="subtractResponse" type="tns:subtractResponse"/>

  <xs:complexType name="multiply">
    <xs:sequence>
      <xs:element name="arg0" type="xs:double"/>
      <xs:element name="arg1" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="multiplyResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="computeAll">
    <xs:sequence>
      <xs:element name="arg0" type="xs:double"/>
      <xs:element name="arg1" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="computeAllResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:result" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="result">
    <xs:sequence>
      <xs:element name="difference" type="xs:double"/>
      <xs:element name="product" type="xs:double"/>
      <xs:element name="ratio" type="xs:double"/>
      <xs:element name="sum" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="divide">
    <xs:sequence>
      <xs:element name="arg0" type="xs:double"/>
      <xs:element name="arg1" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="divideResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="subtract">
    <xs:sequence>
      <xs:element name="arg0" type="xs:double"/>
      <xs:element name="arg1" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="subtractResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="add">
    <xs:sequence>
      <xs:element name="arg0" type="xs:double"/>
      <xs:element name="arg1" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="addResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>

